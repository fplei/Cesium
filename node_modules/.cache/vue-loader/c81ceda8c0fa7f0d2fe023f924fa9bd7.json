{"remainingRequest":"/Users/fanpenglei/Study/Code/cesium-demoV1.1/node_modules/_vue-loader@15.10.0@vue-loader/lib/index.js??vue-loader-options!/Users/fanpenglei/Study/Code/cesium-demoV1.1/node_modules/_gantt-elastic@1.0.12@gantt-elastic/src/components/Expander.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fanpenglei/Study/Code/cesium-demoV1.1/node_modules/_gantt-elastic@1.0.12@gantt-elastic/src/components/Expander.vue","mtime":499162500000},{"path":"/Users/fanpenglei/Study/Code/cesium-demoV1.1/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fanpenglei/Study/Code/cesium-demoV1.1/node_modules/_babel-loader@8.2.5@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/fanpenglei/Study/Code/cesium-demoV1.1/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fanpenglei/Study/Code/cesium-demoV1.1/node_modules/_vue-loader@15.10.0@vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRXhwYW5kZXInLAogIGluamVjdDogWydyb290J10sCiAgcHJvcHM6IFsndGFza3MnLCAnb3B0aW9ucycsICd0eXBlJ10sCiAgZGF0YSgpIHsKICAgIGNvbnN0IGJvcmRlciA9IDAuNTsKICAgIHJldHVybiB7CiAgICAgIGJvcmRlciwKICAgICAgYm9yZGVyU3R5bGU6IHsKICAgICAgICAnc3Ryb2tlLXdpZHRoJzogYm9yZGVyCiAgICAgIH0sCiAgICAgIGxpbmVPZmZzZXQ6IDUKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgc3R5bGUoKSB7CiAgICAgIGlmICh0aGlzLnR5cGUgIT09ICd0YXNrTGlzdCcpIHsKICAgICAgICByZXR1cm4ge307CiAgICAgIH0KICAgICAgY29uc3QgbWFyZ2luID0gdGhpcy5yb290LnN0YXRlLm9wdGlvbnMudGFza0xpc3QuZXhwYW5kZXIubWFyZ2luOwogICAgICBjb25zdCBwYWRkaW5nID0gdGhpcy50YXNrc1swXS5wYXJlbnRzLmxlbmd0aCAqIHRoaXMucm9vdC5zdGF0ZS5vcHRpb25zLnRhc2tMaXN0LmV4cGFuZGVyLnBhZGRpbmc7CiAgICAgIHJldHVybiB7CiAgICAgICAgJ3BhZGRpbmctbGVmdCc6IHBhZGRpbmcgKyBtYXJnaW4gKyAncHgnLAogICAgICAgIG1hcmdpbjogJ2F1dG8gMCcKICAgICAgfTsKICAgIH0sCiAgICAvKioKICAgICAqIEdldCBhbGwgdGFza3MKICAgICAqCiAgICAgKiBAcmV0dXJucyB7YXJyYXl9CiAgICAgKi8KICAgIGFsbENoaWxkcmVuKCkgewogICAgICBjb25zdCBjaGlsZHJlbiA9IFtdOwogICAgICB0aGlzLnRhc2tzLmZvckVhY2godGFzayA9PiB7CiAgICAgICAgdGFzay5hbGxDaGlsZHJlbi5mb3JFYWNoKGNoaWxkSWQgPT4gewogICAgICAgICAgY2hpbGRyZW4ucHVzaChjaGlsZElkKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICAgIHJldHVybiBjaGlsZHJlbjsKICAgIH0sCiAgICAvKioKICAgICAqIElzIGN1cnJlbnQgZXhwYW5kZXIgY29sbGFwc2VkPwogICAgICoKICAgICAqIEByZXR1cm5zIHtib29sZWFufQogICAgICovCiAgICBjb2xsYXBzZWQoKSB7CiAgICAgIGlmICh0aGlzLnRhc2tzLmxlbmd0aCA9PT0gMCkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQogICAgICBsZXQgY29sbGFwc2VkID0gMDsKICAgICAgZm9yIChsZXQgaSA9IDAsIGxlbiA9IHRoaXMudGFza3MubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHsKICAgICAgICBpZiAodGhpcy50YXNrc1tpXS5jb2xsYXBzZWQpIHsKICAgICAgICAgIGNvbGxhcHNlZCsrOwogICAgICAgIH0KICAgICAgfQogICAgICByZXR1cm4gY29sbGFwc2VkID09PSB0aGlzLnRhc2tzLmxlbmd0aDsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIC8qKgogICAgICogR2V0IHNwZWNpZmljIGNsYXNzIHByZWZpeAogICAgICoKICAgICAqIEByZXR1cm5zIHtzdHJpbmd9CiAgICAgKi8KICAgIGdldENsYXNzUHJlZml4KGZ1bGwgPSB0cnVlKSB7CiAgICAgIHJldHVybiBgJHtmdWxsID8gJ2dhbnR0LWVsYXN0aWNfXycgOiAnJ30ke3RoaXMub3B0aW9ucy50eXBlfS1leHBhbmRlcmA7CiAgICB9LAogICAgLyoqCiAgICAgKiBUb2dnbGUgZXhwYW5kZXIKICAgICAqLwogICAgdG9nZ2xlKCkgewogICAgICBpZiAodGhpcy50YXNrcy5sZW5ndGggPT09IDApIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgY29uc3QgY29sbGFwc2VkID0gIXRoaXMuY29sbGFwc2VkOwogICAgICB0aGlzLnRhc2tzLmZvckVhY2godGFzayA9PiB7CiAgICAgICAgdGFzay5jb2xsYXBzZWQgPSBjb2xsYXBzZWQ7CiAgICAgIH0pOwogICAgfQogIH0KfTsK"},{"version":3,"sources":["Expander.vue"],"names":[],"mappings":";AAmDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Expander.vue","sourceRoot":"node_modules/_gantt-elastic@1.0.12@gantt-elastic/src/components","sourcesContent":["<!--\n/**\n * @fileoverview Expander component\n * @license MIT\n * @author Rafal Pospiech <neuronet.io@gmail.com>\n * @package GanttElastic\n */\n-->\n<template>\n  <div :class=\"getClassPrefix() + '-wrapper'\" :style=\"{ ...root.style[getClassPrefix(false) + '-wrapper'], ...style }\">\n    <svg\n      :class=\"getClassPrefix() + '-content'\"\n      :style=\"{ ...root.style[getClassPrefix(false) + '-content'] }\"\n      :width=\"options.size\"\n      :height=\"options.size\"\n      v-if=\"allChildren.length\"\n      @click=\"toggle\"\n    >\n      <rect\n        :class=\"getClassPrefix() + '-border'\"\n        :style=\"{ ...root.style[getClassPrefix(false) + '-border'], ...borderStyle }\"\n        :x=\"border\"\n        :y=\"border\"\n        :width=\"options.size - border * 2\"\n        :height=\"options.size - border * 2\"\n        rx=\"2\"\n        ry=\"2\"\n      ></rect>\n      <line\n        :class=\"getClassPrefix() + '-line'\"\n        :style=\"{ ...root.style[getClassPrefix(false) + '-line'] }\"\n        v-if=\"allChildren.length\"\n        :x1=\"lineOffset\"\n        :y1=\"options.size / 2\"\n        :x2=\"options.size - lineOffset\"\n        :y2=\"options.size / 2\"\n      ></line>\n      <line\n        :class=\"getClassPrefix() + '-line'\"\n        :style=\"{ ...root.style[getClassPrefix(false) + '-line'] }\"\n        v-if=\"collapsed\"\n        :x1=\"options.size / 2\"\n        :y1=\"lineOffset\"\n        :x2=\"options.size / 2\"\n        :y2=\"options.size - lineOffset\"\n      ></line>\n    </svg>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Expander',\n  inject: ['root'],\n  props: ['tasks', 'options', 'type'],\n  data() {\n    const border = 0.5;\n    return {\n      border,\n      borderStyle: {\n        'stroke-width': border\n      },\n      lineOffset: 5\n    };\n  },\n  computed: {\n    style() {\n      if (this.type !== 'taskList') {\n        return {};\n      }\n      const margin = this.root.state.options.taskList.expander.margin;\n      const padding = this.tasks[0].parents.length * this.root.state.options.taskList.expander.padding;\n      return {\n        'padding-left': padding + margin + 'px',\n        margin: 'auto 0'\n      };\n    },\n    /**\n     * Get all tasks\n     *\n     * @returns {array}\n     */\n    allChildren() {\n      const children = [];\n      this.tasks.forEach(task => {\n        task.allChildren.forEach(childId => {\n          children.push(childId);\n        });\n      });\n      return children;\n    },\n    /**\n     * Is current expander collapsed?\n     *\n     * @returns {boolean}\n     */\n    collapsed() {\n      if (this.tasks.length === 0) {\n        return false;\n      }\n      let collapsed = 0;\n      for (let i = 0, len = this.tasks.length; i < len; i++) {\n        if (this.tasks[i].collapsed) {\n          collapsed++;\n        }\n      }\n      return collapsed === this.tasks.length;\n    }\n  },\n  methods: {\n    /**\n     * Get specific class prefix\n     *\n     * @returns {string}\n     */\n    getClassPrefix(full = true) {\n      return `${full ? 'gantt-elastic__' : ''}${this.options.type}-expander`;\n    },\n    /**\n     * Toggle expander\n     */\n    toggle() {\n      if (this.tasks.length === 0) {\n        return;\n      }\n      const collapsed = !this.collapsed;\n      this.tasks.forEach(task => {\n        task.collapsed = collapsed;\n      });\n    }\n  }\n};\n</script>\n"]}]}