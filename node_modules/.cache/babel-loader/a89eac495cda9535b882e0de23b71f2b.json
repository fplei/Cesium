{"remainingRequest":"/Users/fanpenglei/Study/Code/cesium-demoV1.1/node_modules/_babel-loader@8.2.5@babel-loader/lib/index.js!/Users/fanpenglei/Study/Code/cesium-demoV1.1/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--1-0!/Users/fanpenglei/Study/Code/cesium-demoV1.1/node_modules/_vue-loader@15.10.0@vue-loader/lib/index.js??vue-loader-options!/Users/fanpenglei/Study/Code/cesium-demoV1.1/node_modules/_gantt-elastic@1.0.12@gantt-elastic/src/components/Calendar/Calendar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fanpenglei/Study/Code/cesium-demoV1.1/node_modules/_gantt-elastic@1.0.12@gantt-elastic/src/components/Calendar/Calendar.vue","mtime":499162500000},{"path":"/Users/fanpenglei/Study/Code/cesium-demoV1.1/babel.config.js","mtime":1658370777000},{"path":"/Users/fanpenglei/Study/Code/cesium-demoV1.1/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fanpenglei/Study/Code/cesium-demoV1.1/node_modules/_babel-loader@8.2.5@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/fanpenglei/Study/Code/cesium-demoV1.1/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fanpenglei/Study/Code/cesium-demoV1.1/node_modules/_vue-loader@15.10.0@vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"AAsBA;AACA;AAEA;EACAA,gBADA;EAEAC;IACAC;EADA,CAFA;EAKAC,gBALA;;EAMAC;IACA;EACA,CARA;;EAUAC;IACA;AACA;AACA;AACA;AACA;IACAC;MACA;MACA;MACA;MACA;;MACA;QACA;UACA,IACA,4GACAC,SAFA,EAGA;YACA;cACAC,YADA;cAEAC;YAFA;UAIA;QACA;MACA;;MACA;QACAD,QADA;QAEAC;MAFA;IAIA,CA5BA;;IA8BA;AACA;AACA;AACA;AACA;IACAC;MACA;MACA;MACA;MACA;;MACA;QACA;UACA,IACA,sGACAC,QAFA,EAGA;YACA;cACAH,WADA;cAEAC;YAFA;UAIA;QACA;MACA;;MACA;QACAD,QADA;QAEAC;MAFA;IAIA,CAzDA;;IA2DA;AACA;AACA;AACA;AACA;IACAG;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,wCACA,uCADA,EAEA,sCAFA;;MAIA;QACA;UACA;YACA;cACAJ,QADA;cAEAC;YAFA;UAIA;QACA;MACA;;MACA;QACA;UACA,IACA,0GACAI,UAFA,EAGA;YACA;cACAL,aADA;cAEAC;YAFA;UAIA;QACA;MACA;;MACA;QACAD,QADA;QAEAC;MAFA;IAIA,CAvGA;;IAyGA;AACA;AACA;AACA;AACA;IACAK;MACA;;MACA;QACA;MACA;;MACA;MACA;;MACA;QACA;;QACA;UACA;QACA;;QACA;UAAAC;UAAAC;QAAA;QACA;QACA;;QACA;UACA;UACA;;UACA;YACAC;UACA;;UACA;;UACA;YACAC;UACA;;UACA;UACAX;YACAU,gBADA;YAEAF,YAFA;YAGAI,CAHA;YAIAC,8FAJA;YAKAC,kBALA;YAMAH,SANA;YAOAI,oDAPA;YAQAC;UARA;QAUA;;QACAC;MACA;;MACA;IACA,CAtJA;;IAwJA;AACA;AACA;AACA;AACA;IACAC;MACA;;MACA;QACA;MACA;;MACA;;MACA;QACA;MACA;;MACA;MACA;MACA;;MACA;QACA,mBADA,CAEA;;QACA;UACA;YACAC;UACA;QACA;;QACA;QACA;;QACA;UACAR;QACA;;QACA;QACAP;UACAM,eADA;UAEAF,+BAFA;UAGAI,CAHA;UAIAC,gDAJA;UAKAC,iBALA;UAMAH,SANA;UAOAI,mDAPA;UAQAC;QARA;MAUA;;MACA;QACAR,aADA;QAEAC;MAFA;IAIA,CAtMA;;IAwMA;AACA;AACA;AACA;AACA;IACAW;MACA;;MACA;QACA;MACA;;MACA;;MACA;QACA;MACA;;MACA;MACA;MACA;MACA;;MACA;QACA;QACA;QACA,mCACAC,GADA,CACA,CADA,EACA,OADA,EAEAC,OAFA,CAEA,OAFA;;QAGA;UACAC;QACA,CARA,CASA;;;QACA;UACA;;UACA;YACAC;;YACA;cACAC;YACA;UACA;QACA;;QACA;QACA;;QACA;UACA;YACAT;YACAU;UACA;QACA;;QACA;;QACA;UACAf;QACA;;QACA;QACAL;UACAI,iBADA;UAEAF,qBAFA;UAGAI,CAHA;UAIAC,IAJA;UAKAC,iBALA;UAMAH,SANA;UAOAe,iBAPA;UAQAX,qDARA;UASAC;QATA;QAWAW;;QACA;UACAA;QACA;MACA;;MACA;QACAnB,aADA;QAEAC;MAFA;IAIA,CA9QA;;IAgRA;AACA;AACA;AACA;AACA;IACAmB;MAAA5B;MAAAI;MAAAE;IAAA;MACA;;MACA;QACAS;MACA;;MACA;QACAA;MACA;;MACA;QACAA;MACA;;MACA;IACA;;EAjSA,CAVA;EA8SAc;IACAC;MACA;MACA;MACA;MACA;QAAA9B;QAAAI;QAAAE;MAAA;MACA;MACA;IACA;;EARA;AA9SA","names":["name","components","CalendarRow","inject","data","methods","howManyHoursFit","hours","count","type","howManyDaysFit","days","howManyMonthsFit","months","generateHours","key","children","index","textWidth","x","y","width","height","label","allHours","generateDays","dayWidthPx","generateMonths","add","startOf","finalDate","monthWidth","monthOffset","choosenFormatName","currentDate","calculateCalendarDimensions","computed","dates"],"sourceRoot":"node_modules/_gantt-elastic@1.0.12@gantt-elastic/src/components/Calendar","sources":["Calendar.vue"],"sourcesContent":["<!--\n/**\n * @fileoverview Calendar component\n * @license MIT\n * @author Rafal Pospiech <neuronet.io@gmail.com>\n * @package GanttElastic\n */\n-->\n<template>\n  <div\n    class=\"gantt-elastic__calendar-wrapper\"\n    :style=\"{ ...root.style['calendar-wrapper'], width: root.state.options.width + 'px' }\"\n  >\n    <div class=\"gantt-elastic__calendar\" :style=\"{ ...root.style['calendar'], width: root.state.options.width + 'px' }\">\n      <calendar-row :items=\"dates.months\" which=\"month\" v-if=\"root.state.options.calendar.month.display\"></calendar-row>\n      <calendar-row :items=\"dates.days\" which=\"day\" v-if=\"root.state.options.calendar.day.display\"></calendar-row>\n      <calendar-row :items=\"dates.hours\" which=\"hour\" v-if=\"root.state.options.calendar.hour.display\"></calendar-row>\n    </div>\n  </div>\n</template>\n\n<script>\nimport dayjs from 'dayjs';\nimport CalendarRow from './CalendarRow.vue';\n\nexport default {\n  name: 'Calendar',\n  components: {\n    CalendarRow\n  },\n  inject: ['root'],\n  data() {\n    return {};\n  },\n\n  methods: {\n    /**\n     * How many hours will fit?\n     *\n     * @returns {object}\n     */\n    howManyHoursFit(dayIndex) {\n      const stroke = 1;\n      const additionalSpace = stroke + 2;\n      let fullCellWidth = this.root.state.options.times.steps[dayIndex].width.px;\n      let formatNames = Object.keys(this.root.state.options.calendar.hour.format);\n      for (let hours = 24; hours > 1; hours = Math.ceil(hours / 2)) {\n        for (let formatName of formatNames) {\n          if (\n            (this.root.state.options.calendar.hour.maxWidths[formatName] + additionalSpace) * hours <= fullCellWidth &&\n            hours > 1\n          ) {\n            return {\n              count: hours,\n              type: formatName\n            };\n          }\n        }\n      }\n      return {\n        count: 0,\n        type: ''\n      };\n    },\n\n    /**\n     * How many days will fit?\n     *\n     * @returns {object}\n     */\n    howManyDaysFit() {\n      const stroke = 1;\n      const additionalSpace = stroke + 2;\n      let fullWidth = this.root.state.options.width;\n      let formatNames = Object.keys(this.root.state.options.calendar.day.format);\n      for (let days = this.root.state.options.times.steps.length; days > 1; days = Math.ceil(days / 2)) {\n        for (let formatName of formatNames) {\n          if (\n            (this.root.state.options.calendar.day.maxWidths[formatName] + additionalSpace) * days <= fullWidth &&\n            days > 1\n          ) {\n            return {\n              count: days,\n              type: formatName\n            };\n          }\n        }\n      }\n      return {\n        count: 0,\n        type: ''\n      };\n    },\n\n    /**\n     * How many months will fit?\n     *\n     * @returns {object}\n     */\n    howManyMonthsFit() {\n      const stroke = 1;\n      const additionalSpace = stroke + 2;\n      let fullWidth = this.root.state.options.width;\n      let formatNames = Object.keys(this.root.state.options.calendar.month.format);\n      let currentMonth = dayjs(this.root.state.options.times.firstTime);\n      let previousMonth = currentMonth.clone();\n      const lastTime = this.root.state.options.times.lastTime;\n      let monthsCount = this.root.monthsCount(\n        this.root.state.options.times.firstTime,\n        this.root.state.options.times.lastTime\n      );\n      if (monthsCount === 1) {\n        for (let formatName of formatNames) {\n          if (this.root.state.options.calendar.month.maxWidths[formatName] + additionalSpace <= fullWidth) {\n            return {\n              count: 1,\n              type: formatName\n            };\n          }\n        }\n      }\n      for (let months = monthsCount; months > 1; months = Math.ceil(months / 2)) {\n        for (let formatName of formatNames) {\n          if (\n            (this.root.state.options.calendar.month.maxWidths[formatName] + additionalSpace) * months <= fullWidth &&\n            months > 1\n          ) {\n            return {\n              count: months,\n              type: formatName\n            };\n          }\n        }\n      }\n      return {\n        count: 0,\n        type: formatNames[0]\n      };\n    },\n\n    /**\n     * Generate hours\n     *\n     * @returns {array}\n     */\n    generateHours() {\n      let allHours = [];\n      if (!this.root.state.options.calendar.hour.display) {\n        return allHours;\n      }\n      const steps = this.root.state.options.times.steps;\n      const localeName = this.root.state.options.locale.name;\n      for (let hourIndex = 0, len = steps.length; hourIndex < len; hourIndex++) {\n        const hoursCount = this.howManyHoursFit(hourIndex);\n        if (hoursCount.count === 0) {\n          continue;\n        }\n        const hours = { key: hourIndex + 'step', children: [] };\n        const hourStep = 24 / hoursCount.count;\n        const hourWidthPx = steps[hourIndex].width.px / hoursCount.count;\n        for (let i = 0, len = hoursCount.count; i < len; i++) {\n          const hour = i * hourStep;\n          let index = hourIndex;\n          if (hourIndex > 0) {\n            index = hourIndex - Math.floor(hourIndex / 24) * 24;\n          }\n          let textWidth = 0;\n          if (typeof this.root.state.options.calendar.hour.widths[index] !== 'undefined') {\n            textWidth = this.root.state.options.calendar.hour.widths[index][hoursCount.type];\n          }\n          let x = steps[hourIndex].offset.px + hourWidthPx * i;\n          hours.children.push({\n            index: hourIndex,\n            key: 'h' + i,\n            x,\n            y: this.root.state.options.calendar.day.height + this.root.state.options.calendar.month.height,\n            width: hourWidthPx,\n            textWidth,\n            height: this.root.state.options.calendar.hour.height,\n            label: this.root.state.options.calendar.hour.formatted[hoursCount.type][hour]\n          });\n        }\n        allHours.push(hours);\n      }\n      return allHours;\n    },\n\n    /**\n     * Generate days\n     *\n     * @returns {array}\n     */\n    generateDays() {\n      let days = [];\n      if (!this.root.state.options.calendar.day.display) {\n        return days;\n      }\n      const daysCount = this.howManyDaysFit();\n      if (daysCount.count === 0) {\n        return days;\n      }\n      const steps = this.root.state.options.times.steps;\n      const localeName = this.root.state.options.locale.name;\n      const dayStep = Math.ceil(steps.length / daysCount.count);\n      for (let dayIndex = 0, len = steps.length; dayIndex < len; dayIndex += dayStep) {\n        let dayWidthPx = 0;\n        // day could be shorter (daylight saving time) so join widths and divide\n        for (let currentStep = 0; currentStep < dayStep; currentStep++) {\n          if (typeof steps[dayIndex + currentStep] !== 'undefined') {\n            dayWidthPx += steps[dayIndex + currentStep].width.px;\n          }\n        }\n        const date = dayjs(steps[dayIndex].time);\n        let textWidth = 0;\n        if (typeof this.root.state.options.calendar.day.widths[dayIndex] !== 'undefined') {\n          textWidth = this.root.state.options.calendar.day.widths[dayIndex][daysCount.type];\n        }\n        let x = steps[dayIndex].offset.px;\n        days.push({\n          index: dayIndex,\n          key: steps[dayIndex].time + 'd',\n          x,\n          y: this.root.state.options.calendar.month.height,\n          width: dayWidthPx,\n          textWidth,\n          height: this.root.state.options.calendar.day.height,\n          label: this.root.state.options.calendar.day.format[daysCount.type](date.locale(localeName))\n        });\n      }\n      return days.map(item => ({\n        key: item.key,\n        children: [item]\n      }));\n    },\n\n    /**\n     * Generate months\n     *\n     * @returns {array}\n     */\n    generateMonths() {\n      let months = [];\n      if (!this.root.state.options.calendar.month.display) {\n        return months;\n      }\n      const monthsCount = this.howManyMonthsFit();\n      if (monthsCount.count === 0) {\n        return months;\n      }\n      const steps = this.root.state.options.times.steps;\n      const localeName = this.root.state.options.locale.name;\n      let formatNames = Object.keys(this.root.state.options.calendar.month.format);\n      let currentDate = dayjs(this.root.state.options.times.firstTime);\n      for (let monthIndex = 0; monthIndex < monthsCount.count; monthIndex++) {\n        let monthWidth = 0;\n        let monthOffset = Number.MAX_SAFE_INTEGER;\n        let finalDate = dayjs(currentDate)\n          .add(1, 'month')\n          .startOf('month');\n        if (finalDate.valueOf() > this.root.state.options.times.lastTime) {\n          finalDate = dayjs(this.root.state.options.times.lastTime);\n        }\n        // we must find first and last step to get the offsets / widths\n        for (let step = 0, len = this.root.state.options.times.steps.length; step < len; step++) {\n          let currentStep = this.root.state.options.times.steps[step];\n          if (currentStep.time >= currentDate.valueOf() && currentStep.time < finalDate.valueOf()) {\n            monthWidth += currentStep.width.px;\n            if (currentStep.offset.px < monthOffset) {\n              monthOffset = currentStep.offset.px;\n            }\n          }\n        }\n        let label = '';\n        let choosenFormatName;\n        for (let formatName of formatNames) {\n          if (this.root.state.options.calendar.month.maxWidths[formatName] + 2 <= monthWidth) {\n            label = this.root.state.options.calendar.month.format[formatName](currentDate.locale(localeName));\n            choosenFormatName = formatName;\n          }\n        }\n        let textWidth = 0;\n        if (typeof this.root.state.options.calendar.month.widths[monthIndex] !== 'undefined') {\n          textWidth = this.root.state.options.calendar.month.widths[monthIndex][choosenFormatName];\n        }\n        let x = monthOffset;\n        months.push({\n          index: monthIndex,\n          key: monthIndex + 'm',\n          x,\n          y: 0,\n          width: monthWidth,\n          textWidth,\n          choosenFormatName,\n          height: this.root.state.options.calendar.month.height,\n          label\n        });\n        currentDate = currentDate.add(1, 'month').startOf('month');\n        if (currentDate.valueOf() > this.root.state.options.times.lastTime) {\n          currentDate = dayjs(this.root.state.options.times.lastTime);\n        }\n      }\n      return months.map(item => ({\n        key: item.key,\n        children: [item]\n      }));\n    },\n\n    /**\n     * Sum all calendar rows height and return result\n     *\n     * @returns {int}\n     */\n    calculateCalendarDimensions({ hours, days, months }) {\n      let height = 0;\n      if (this.root.state.options.calendar.hour.display && hours.length > 0) {\n        height += this.root.state.options.calendar.hour.height;\n      }\n      if (this.root.state.options.calendar.day.display && days.length > 0) {\n        height += this.root.state.options.calendar.day.height;\n      }\n      if (this.root.state.options.calendar.month.display && months.length > 0) {\n        height += this.root.state.options.calendar.month.height;\n      }\n      this.root.state.options.calendar.height = height;\n    }\n  },\n\n  computed: {\n    dates() {\n      const hours = this.generateHours();\n      const days = this.generateDays();\n      const months = this.generateMonths();\n      const allDates = { hours, days, months };\n      this.calculateCalendarDimensions(allDates);\n      return allDates;\n    }\n  }\n};\n</script>\n"]}]}