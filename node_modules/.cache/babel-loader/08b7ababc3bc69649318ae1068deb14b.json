{"remainingRequest":"/Users/fanpenglei/Study/Code/cesium-demoV1.1/node_modules/_babel-loader@8.2.5@babel-loader/lib/index.js!/Users/fanpenglei/Study/Code/cesium-demoV1.1/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--1-0!/Users/fanpenglei/Study/Code/cesium-demoV1.1/node_modules/_vue-loader@15.10.0@vue-loader/lib/index.js??vue-loader-options!/Users/fanpenglei/Study/Code/cesium-demoV1.1/node_modules/_gantt-elastic@1.0.12@gantt-elastic/src/components/Chart/DependencyLines.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/fanpenglei/Study/Code/cesium-demoV1.1/node_modules/_gantt-elastic@1.0.12@gantt-elastic/src/components/Chart/DependencyLines.vue","mtime":499162500000},{"path":"/Users/fanpenglei/Study/Code/cesium-demoV1.1/babel.config.js","mtime":1658370777000},{"path":"/Users/fanpenglei/Study/Code/cesium-demoV1.1/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fanpenglei/Study/Code/cesium-demoV1.1/node_modules/_babel-loader@8.2.5@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/fanpenglei/Study/Code/cesium-demoV1.1/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/fanpenglei/Study/Code/cesium-demoV1.1/node_modules/_vue-loader@15.10.0@vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdEZXBlbmRlbmN5TGluZXMnLAogIGluamVjdDogWydyb290J10sCiAgcHJvcHM6IFsndGFza3MnXSwKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7fTsKICB9LAoKICBtZXRob2RzOiB7CiAgICAvKioKICAgICAqIEdldCBwYXRoIHBvaW50cwogICAgICoKICAgICAqIEBwYXJhbSB7YW55fSBmcm9tVGFza0lkCiAgICAgKiBAcGFyYW0ge2FueX0gdG9UYXNrSWQKICAgICAqIEByZXR1cm5zIHtzdHJpbmd9CiAgICAgKi8KICAgIGdldFBvaW50cyhmcm9tVGFza0lkLCB0b1Rhc2tJZCkgewogICAgICBjb25zdCBmcm9tVGFzayA9IHRoaXMucm9vdC5nZXRUYXNrKGZyb21UYXNrSWQpOwogICAgICBjb25zdCB0b1Rhc2sgPSB0aGlzLnJvb3QuZ2V0VGFzayh0b1Rhc2tJZCk7CgogICAgICBpZiAoZnJvbVRhc2sgPT09IG51bGwgfHwgdG9UYXNrID09PSBudWxsIHx8ICF0aGlzLnJvb3QuaXNUYXNrVmlzaWJsZSh0b1Rhc2spIHx8ICF0aGlzLnJvb3QuaXNUYXNrVmlzaWJsZShmcm9tVGFzaykpIHsKICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgfQoKICAgICAgY29uc3Qgc3RhcnRYID0gZnJvbVRhc2sueCArIGZyb21UYXNrLndpZHRoOwogICAgICBjb25zdCBzdGFydFkgPSBmcm9tVGFzay55ICsgZnJvbVRhc2suaGVpZ2h0IC8gMjsKICAgICAgY29uc3Qgc3RvcFggPSB0b1Rhc2sueDsKICAgICAgY29uc3Qgc3RvcFkgPSB0b1Rhc2sueSArIHRvVGFzay5oZWlnaHQgLyAyOwogICAgICBjb25zdCBkaXN0YW5jZVggPSBzdG9wWCAtIHN0YXJ0WDsKICAgICAgbGV0IGRpc3RhbmNlWTsKICAgICAgbGV0IHlNdWx0aXBsaWVyID0gMTsKCiAgICAgIGlmIChzdG9wWSA+PSBzdGFydFkpIHsKICAgICAgICBkaXN0YW5jZVkgPSBzdG9wWSAtIHN0YXJ0WTsKICAgICAgfSBlbHNlIHsKICAgICAgICBkaXN0YW5jZVkgPSBzdGFydFkgLSBzdG9wWTsKICAgICAgICB5TXVsdGlwbGllciA9IC0xOwogICAgICB9CgogICAgICBjb25zdCBvZmZzZXQgPSAxMDsKICAgICAgY29uc3Qgcm91bmRuZXNzID0gNDsKICAgICAgY29uc3QgaXNCZWZvcmUgPSBkaXN0YW5jZVggPD0gb2Zmc2V0ICsgcm91bmRuZXNzOwogICAgICBsZXQgcG9pbnRzID0gYE0gJHtzdGFydFh9ICR7c3RhcnRZfQogICAgICAgICAgTCAke3N0YXJ0WCArIG9mZnNldH0sJHtzdGFydFl9IGA7CgogICAgICBpZiAoaXNCZWZvcmUpIHsKICAgICAgICBwb2ludHMgKz0gYFEgJHtzdGFydFggKyBvZmZzZXQgKyByb3VuZG5lc3N9LCR7c3RhcnRZfSAke3N0YXJ0WCArIG9mZnNldCArIHJvdW5kbmVzc30sJHtzdGFydFkgKyByb3VuZG5lc3MgKiB5TXVsdGlwbGllcn0KICAgICAgICAgICAgTCAke3N0YXJ0WCArIG9mZnNldCArIHJvdW5kbmVzc30sJHtzdGFydFkgKyBkaXN0YW5jZVkgKiB5TXVsdGlwbGllciAvIDIgLSByb3VuZG5lc3MgKiB5TXVsdGlwbGllcn0KICAgICAgICAgICAgUSAke3N0YXJ0WCArIG9mZnNldCArIHJvdW5kbmVzc30sJHtzdGFydFkgKyBkaXN0YW5jZVkgKiB5TXVsdGlwbGllciAvIDJ9ICR7c3RhcnRYICsgb2Zmc2V0fSwke3N0YXJ0WSArIGRpc3RhbmNlWSAqIHlNdWx0aXBsaWVyIC8gMn0KICAgICAgICAgICAgTCAke3N0YXJ0WCAtIG9mZnNldCArIGRpc3RhbmNlWH0sJHtzdGFydFkgKyBkaXN0YW5jZVkgKiB5TXVsdGlwbGllciAvIDJ9CiAgICAgICAgICAgIFEgJHtzdGFydFggLSBvZmZzZXQgKyBkaXN0YW5jZVggLSByb3VuZG5lc3N9LCR7c3RhcnRZICsgZGlzdGFuY2VZICogeU11bHRpcGxpZXIgLyAyfSAke3N0YXJ0WCAtIG9mZnNldCArIGRpc3RhbmNlWCAtIHJvdW5kbmVzc30sJHtzdGFydFkgKyBkaXN0YW5jZVkgKiB5TXVsdGlwbGllciAvIDIgKyByb3VuZG5lc3MgKiB5TXVsdGlwbGllcn0KICAgICAgICAgICAgTCAke3N0YXJ0WCAtIG9mZnNldCArIGRpc3RhbmNlWCAtIHJvdW5kbmVzc30sJHtzdG9wWSAtIHJvdW5kbmVzcyAqIHlNdWx0aXBsaWVyfQogICAgICAgICAgICBRICR7c3RhcnRYIC0gb2Zmc2V0ICsgZGlzdGFuY2VYIC0gcm91bmRuZXNzfSwke3N0b3BZfSAke3N0YXJ0WCAtIG9mZnNldCArIGRpc3RhbmNlWH0sJHtzdG9wWX0KICAgICAgICAgICAgTCAke3N0b3BYfSwke3N0b3BZfWA7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcG9pbnRzICs9IGBMICR7c3RhcnRYICsgZGlzdGFuY2VYIC8gMiAtIHJvdW5kbmVzc30sJHtzdGFydFl9CiAgICAgICAgICAgIFEgJHtzdGFydFggKyBkaXN0YW5jZVggLyAyfSwke3N0YXJ0WX0gJHtzdGFydFggKyBkaXN0YW5jZVggLyAyfSwke3N0YXJ0WSArIHJvdW5kbmVzcyAqIHlNdWx0aXBsaWVyfQogICAgICAgICAgICBMICR7c3RhcnRYICsgZGlzdGFuY2VYIC8gMn0sJHtzdG9wWSAtIHJvdW5kbmVzcyAqIHlNdWx0aXBsaWVyfQogICAgICAgICAgICBRICR7c3RhcnRYICsgZGlzdGFuY2VYIC8gMn0sJHtzdG9wWX0gJHtzdGFydFggKyBkaXN0YW5jZVggLyAyICsgcm91bmRuZXNzfSwke3N0b3BZfQogICAgICAgICAgICBMICR7c3RvcFh9LCR7c3RvcFl9YDsKICAgICAgfQoKICAgICAgcmV0dXJuIHBvaW50czsKICAgIH0KCiAgfSwKICBjb21wdXRlZDogewogICAgLyoqCiAgICAgKiBHZXQgdGFza3Mgd2hpY2ggYXJlIGRlcGVuZGVudCBvbiBvdGhlciB0YXNrcwogICAgICoKICAgICAqIEByZXR1cm5zIHthcnJheX0KICAgICAqLwogICAgZGVwZW5kZW5jeVRhc2tzKCkgewogICAgICByZXR1cm4gdGhpcy50YXNrcy5maWx0ZXIodGFzayA9PiB0eXBlb2YgdGFzay5kZXBlbmRlbnRPbiAhPT0gJ3VuZGVmaW5lZCcpLm1hcCh0YXNrID0+IHsKICAgICAgICB0YXNrLmRlcGVuZGVuY3lMaW5lcyA9IHRhc2suZGVwZW5kZW50T24ubWFwKGlkID0+IHsKICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIHBvaW50czogdGhpcy5nZXRQb2ludHMoaWQsIHRhc2suaWQpLAogICAgICAgICAgICB0YXNrX2lkOiBpZAogICAgICAgICAgfTsKICAgICAgICB9KTsKICAgICAgICByZXR1cm4gdGFzazsKICAgICAgfSkuZmlsdGVyKHRhc2sgPT4gdGFzay5kZXBlbmRlbmN5TGluZXMucG9pbnRzICE9PSBudWxsKTsKICAgIH0KCiAgfQp9Ow=="},{"version":3,"mappings":"AA+BA;EACAA,uBADA;EAEAC,gBAFA;EAGAC,gBAHA;;EAIAC;IACA;EACA,CANA;;EAOAC;IACA;AACA;AACA;AACA;AACA;AACA;AACA;IACAC;MACA;MACA;;MACA,IACAC,qBACAC,eADA,IAEA,gCAFA,IAGA,kCAJA,EAKA;QACA;MACA;;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MACA;QACAC;MACA,CAFA,MAEA;QACAA;QACAC;MACA;;MACA;MACA;MACA;MACA;AACA,0CADA;;MAEA;QACAC,gGACAC;AACA;AACA,mHACAH;AACA;AACA,4GACAI,MADA,GAEAC,SAFA,GAGAF;AACA;AACA;AACA,gCAZA;MAaA,CAdA,MAcA;QACAD;AACA;AACA;AACA;AACA,gCAJA;MAKA;;MACA;IACA;;EA3DA,CAPA;EAoEAI;IACA;AACA;AACA;AACA;AACA;IACAC;MACA,kBACAC,MADA,CACAC,+CADA,EAEAC,GAFA,CAEAD;QACAA;UACA;YAAAP;YAAAS;UAAA;QACA,CAFA;QAGA;MACA,CAPA,EAQAH,MARA,CAQAC,4CARA;IASA;;EAhBA;AApEA","names":["name","inject","props","data","methods","getPoints","fromTask","toTask","distanceY","yMultiplier","points","roundness","offset","distanceX","computed","dependencyTasks","filter","task","map","task_id"],"sourceRoot":"node_modules/_gantt-elastic@1.0.12@gantt-elastic/src/components/Chart","sources":["DependencyLines.vue"],"sourcesContent":["<!--\n/**\n * @fileoverview DependencyLines component\n * @license MIT\n * @author Rafal Pospiech <neuronet.io@gmail.com>\n * @package GanttElastic\n */\n-->\n<template>\n  <svg\n    x=\"0\"\n    y=\"0\"\n    width=\"100%\"\n    height=\"100%\"\n    class=\"gantt-elastic__chart-dependency-lines-container\"\n    :style=\"{ ...root.style['chart-dependency-lines-container'] }\"\n  >\n    <g v-for=\"task in dependencyTasks\" :key=\"task.id\" :task=\"task\">\n      <path\n        class=\"gantt-elastic__chart-dependency-lines-path\"\n        :style=\"{ ...root.style['chart-dependency-lines-path'], ...task.style['chart-dependency-lines-path'], ...task.style['chart-dependency-lines-path-' + dependencyLine.task_id] }\"\n        v-for=\"dependencyLine in task.dependencyLines\"\n        :key=\"dependencyLine.id\"\n        :task=\"task\"\n        :d=\"dependencyLine.points\"\n      ></path>\n    </g>\n  </svg>\n</template>\n\n<script>\nexport default {\n  name: 'DependencyLines',\n  inject: ['root'],\n  props: ['tasks'],\n  data() {\n    return {};\n  },\n  methods: {\n    /**\n     * Get path points\n     *\n     * @param {any} fromTaskId\n     * @param {any} toTaskId\n     * @returns {string}\n     */\n    getPoints(fromTaskId, toTaskId) {\n      const fromTask = this.root.getTask(fromTaskId);\n      const toTask = this.root.getTask(toTaskId);\n      if (\n        fromTask === null ||\n        toTask === null ||\n        !this.root.isTaskVisible(toTask) ||\n        !this.root.isTaskVisible(fromTask)\n      ) {\n        return null;\n      }\n      const startX = fromTask.x + fromTask.width;\n      const startY = fromTask.y + fromTask.height / 2;\n      const stopX = toTask.x;\n      const stopY = toTask.y + toTask.height / 2;\n      const distanceX = stopX - startX;\n      let distanceY;\n      let yMultiplier = 1;\n      if (stopY >= startY) {\n        distanceY = stopY - startY;\n      } else {\n        distanceY = startY - stopY;\n        yMultiplier = -1;\n      }\n      const offset = 10;\n      const roundness = 4;\n      const isBefore = distanceX <= offset + roundness;\n      let points = `M ${startX} ${startY}\n          L ${startX + offset},${startY} `;\n      if (isBefore) {\n        points += `Q ${startX + offset + roundness},${startY} ${startX + offset + roundness},${startY +\n          roundness * yMultiplier}\n            L ${startX + offset + roundness},${startY + (distanceY * yMultiplier) / 2 - roundness * yMultiplier}\n            Q ${startX + offset + roundness},${startY + (distanceY * yMultiplier) / 2} ${startX + offset},${startY +\n          (distanceY * yMultiplier) / 2}\n            L ${startX - offset + distanceX},${startY + (distanceY * yMultiplier) / 2}\n            Q ${startX - offset + distanceX - roundness},${startY + (distanceY * yMultiplier) / 2} ${startX -\n          offset +\n          distanceX -\n          roundness},${startY + (distanceY * yMultiplier) / 2 + roundness * yMultiplier}\n            L ${startX - offset + distanceX - roundness},${stopY - roundness * yMultiplier}\n            Q ${startX - offset + distanceX - roundness},${stopY} ${startX - offset + distanceX},${stopY}\n            L ${stopX},${stopY}`;\n      } else {\n        points += `L ${startX + distanceX / 2 - roundness},${startY}\n            Q ${startX + distanceX / 2},${startY} ${startX + distanceX / 2},${startY + roundness * yMultiplier}\n            L ${startX + distanceX / 2},${stopY - roundness * yMultiplier}\n            Q ${startX + distanceX / 2},${stopY} ${startX + distanceX / 2 + roundness},${stopY}\n            L ${stopX},${stopY}`;\n      }\n      return points;\n    }\n  },\n  computed: {\n    /**\n     * Get tasks which are dependent on other tasks\n     *\n     * @returns {array}\n     */\n    dependencyTasks() {\n      return this.tasks\n        .filter(task => typeof task.dependentOn !== 'undefined')\n        .map(task => {\n          task.dependencyLines = task.dependentOn.map(id => {\n            return { points: this.getPoints(id, task.id), task_id: id };\n          });\n          return task;\n        })\n        .filter(task => task.dependencyLines.points !== null);\n    }\n  }\n};\n</script>\n"]}]}